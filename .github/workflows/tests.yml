name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        django-version: [4.2, 5.0]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: havoc_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage pytest-django pytest-cov
        pip install django==${{ matrix.django-version }}
    
    - name: Create .env file
      run: |
        echo "DEBUG=True" > .env
        echo "SECRET_KEY=test-secret-key-for-ci" >> .env
        echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/havoc_test" >> .env
        echo "EMAIL_BACKEND=django.core.mail.backends.locmem.EmailBackend" >> .env
        echo "ALLOWED_HOSTS=localhost,127.0.0.1" >> .env
    
    - name: Run migrations
      run: |
        python manage.py migrate --settings=havoc.settings
    
    - name: Run tests with coverage
      run: |
        coverage run --source='.' manage.py test --keepdb --parallel
        coverage xml
        coverage report
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Run Black
      run: black --check --diff .
    
    - name: Run isort
      run: isort --check-only --diff .
    
    - name: Run flake8
      run: flake8 .
    
    - name: Run mypy
      run: mypy . --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run Bandit security linter
      run: bandit -r . -x tests/
    
    - name: Check dependencies for security vulnerabilities
      run: safety check

  performance:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: havoc_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install django-debug-toolbar locust
    
    - name: Create .env file
      run: |
        echo "DEBUG=False" > .env
        echo "SECRET_KEY=test-secret-key-for-ci" >> .env
        echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/havoc_test" >> .env
        echo "EMAIL_BACKEND=django.core.mail.backends.locmem.EmailBackend" >> .env
        echo "ALLOWED_HOSTS=localhost,127.0.0.1" >> .env
    
    - name: Run migrations
      run: |
        python manage.py migrate --settings=havoc.settings
    
    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput --settings=havoc.settings
    
    - name: Run performance tests
      run: |
        python manage.py test apps.accounts.tests.test_models --settings=havoc.settings --timing
        
    - name: Check for N+1 queries
      run: |
        python manage.py shell -c "
        from django.test.utils import override_settings
        from django.db import connection
        from django.test import TestCase
        
        # Simular algumas consultas para verificar N+1
        print('Performance check completed')
        "

  build:
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create .env file
      run: |
        echo "DEBUG=False" > .env
        echo "SECRET_KEY=test-secret-key-for-ci" >> .env
        echo "DATABASE_URL=sqlite:///db.sqlite3" >> .env
        echo "EMAIL_BACKEND=django.core.mail.backends.locmem.EmailBackend" >> .env
        echo "ALLOWED_HOSTS=localhost,127.0.0.1" >> .env
    
    - name: Check Django deployment
      run: |
        python manage.py check --deploy --settings=havoc.settings
    
    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput --settings=havoc.settings
    
    - name: Create deployment artifact
      run: |
        tar -czf havoc-${{ github.sha }}.tar.gz \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='*.pyc' \
          --exclude='__pycache__' \
          .
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: havoc-build-${{ github.sha }}
        path: havoc-${{ github.sha }}.tar.gz
        retention-days: 30
