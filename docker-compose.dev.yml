version: '3.8'

services:
  # Banco de dados PostgreSQL para desenvolvimento
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: havoc_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para desenvolvimento
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicação Django em modo desenvolvimento
  web:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=havoc_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
      - dev_media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Worker para desenvolvimento
  celery_worker:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    command: celery -A core worker --loglevel=info --concurrency=2
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=havoc_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
      - dev_media:/app/media
    depends_on:
      - db
      - redis

  # Flower para desenvolvimento
  flower:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    command: celery -A core flower --port=5555
    environment:
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis

volumes:
  postgres_dev_data:
    driver: local
  dev_media:
    driver: local

networks:
  default:
    driver: bridge
