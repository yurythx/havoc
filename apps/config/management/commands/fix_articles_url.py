from django.core.management.base import BaseCommand
from apps.config.models.app_module_config import AppModuleConfiguration


class Command(BaseCommand):
    help = 'Corrige o URL pattern do m√≥dulo articles'
    
    def handle(self, *args, **options):
        self.stdout.write('üîß Corrigindo URL pattern do m√≥dulo articles...')
        
        try:
            # Busca o m√≥dulo articles
            articles_module = AppModuleConfiguration.objects.filter(app_name='articles').first()
            
            if not articles_module:
                self.stdout.write(
                    self.style.WARNING('‚ö†Ô∏è  M√≥dulo articles n√£o encontrado no banco de dados.')
                )
                return
            
            # Mostra configura√ß√£o atual
            self.stdout.write(f'üìã Configura√ß√£o atual:')
            self.stdout.write(f'  ‚Ä¢ App Name: {articles_module.app_name}')
            self.stdout.write(f'  ‚Ä¢ Display Name: {articles_module.display_name}')
            self.stdout.write(f'  ‚Ä¢ URL Pattern: {articles_module.url_pattern}')
            self.stdout.write(f'  ‚Ä¢ Status: {articles_module.status}')
            self.stdout.write(f'  ‚Ä¢ Enabled: {articles_module.is_enabled}')
            
            # Corrige o URL pattern
            old_pattern = articles_module.url_pattern
            articles_module.url_pattern = 'artigos/'
            articles_module.save()
            
            self.stdout.write(
                self.style.SUCCESS(f'‚úÖ URL pattern atualizado de "{old_pattern}" para "{articles_module.url_pattern}"')
            )
            
            # Verifica se est√° habilitado
            if not articles_module.is_enabled:
                self.stdout.write(
                    self.style.WARNING('‚ö†Ô∏è  M√≥dulo articles est√° desabilitado. Habilitando...')
                )
                articles_module.is_enabled = True
                articles_module.status = 'active'
                articles_module.save()
                self.stdout.write(
                    self.style.SUCCESS('‚úÖ M√≥dulo articles habilitado com sucesso!')
                )
            
            # Mostra configura√ß√£o final
            self.stdout.write(f'\nüìã Configura√ß√£o final:')
            self.stdout.write(f'  ‚Ä¢ URL Pattern: {articles_module.url_pattern}')
            self.stdout.write(f'  ‚Ä¢ Status: {articles_module.status}')
            self.stdout.write(f'  ‚Ä¢ Enabled: {articles_module.is_enabled}')
            
            self.stdout.write(
                self.style.SUCCESS('\nüéâ Corre√ß√£o conclu√≠da! Agora /artigos/ deve funcionar corretamente.')
            )
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå Erro ao corrigir m√≥dulo articles: {str(e)}')
            )
            raise e
