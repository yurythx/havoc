from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.core.exceptions import ValidationError
import os

User = get_user_model()

class Command(BaseCommand):
    help = 'Cria um superusu치rio padr칚o se n칚o existir'

    def add_arguments(self, parser):
        parser.add_argument(
            '--email',
            type=str,
            default='admin@havoc.com',
            help='Email do superusu치rio (padr칚o: admin@havoc.com)',
        )
        parser.add_argument(
            '--username',
            type=str,
            default='admin',
            help='Username do superusu치rio (padr칚o: admin)',
        )
        parser.add_argument(
            '--password',
            type=str,
            default='admin123',
            help='Senha do superusu치rio (padr칚o: admin123)',
        )
        parser.add_argument(
            '--first-name',
            type=str,
            default='Admin',
            help='Primeiro nome (padr칚o: Admin)',
        )
        parser.add_argument(
            '--last-name',
            type=str,
            default='Havoc',
            help='칔ltimo nome (padr칚o: Havoc)',
        )
        parser.add_argument(
            '--force',
            action='store_true',
            help='For칞a cria칞칚o mesmo se j치 existir superusu치rio',
        )

    def handle(self, *args, **options):
        email = options['email']
        username = options['username']
        password = options['password']
        first_name = options['first_name']
        last_name = options['last_name']
        force = options['force']

        # Verificar se j치 existe superusu치rio
        if not force and User.objects.filter(is_superuser=True).exists():
            existing_superuser = User.objects.filter(is_superuser=True).first()
            self.stdout.write(
                self.style.WARNING(
                    f'Superusu치rio j치 existe: {existing_superuser.email} ({existing_superuser.username})'
                )
            )
            return

        # Verificar se usu치rio com email j치 existe
        if User.objects.filter(email=email).exists():
            existing_user = User.objects.get(email=email)
            if not existing_user.is_superuser:
                # Promover usu치rio existente a superusu치rio
                existing_user.is_superuser = True
                existing_user.is_staff = True
                existing_user.is_verified = True
                existing_user.save()
                
                self.stdout.write(
                    self.style.SUCCESS(
                        f'Usu치rio existente {email} promovido a superusu치rio!'
                    )
                )
            else:
                self.stdout.write(
                    self.style.WARNING(
                        f'Superusu치rio {email} j치 existe!'
                    )
                )
            return

        # Verificar se username j치 existe
        if User.objects.filter(username=username).exists():
            self.stdout.write(
                self.style.ERROR(
                    f'Username {username} j치 est치 em uso. Use --username para especificar outro.'
                )
            )
            return

        try:
            # Criar superusu치rio
            user = User.objects.create_superuser(
                email=email,
                password=password,
                username=username,
                first_name=first_name,
                last_name=last_name
            )
            
            self.stdout.write(
                self.style.SUCCESS(
                    f'Superusu치rio criado com sucesso!\n'
                    f'Email: {user.email}\n'
                    f'Username: {user.username}\n'
                    f'Senha: {password}\n'
                    f'Nome: {user.first_name} {user.last_name}'
                )
            )
            
            # Mostrar informa칞칫es de acesso
            self.stdout.write(
                self.style.HTTP_INFO(
                    '\n游댏 INFORMA칂칏ES DE ACESSO:\n'
                    f'   URL Admin: /admin/\n'
                    f'   Email: {email}\n'
                    f'   Senha: {password}\n'
                    '\n丘멆잺  IMPORTANTE: Altere a senha padr칚o em produ칞칚o!'
                )
            )

        except ValidationError as e:
            self.stdout.write(
                self.style.ERROR(f'Erro de valida칞칚o: {e}')
            )
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'Erro ao criar superusu치rio: {e}')
            )

    def get_env_or_default(self, env_var, default):
        """Pega valor da vari치vel de ambiente ou usa padr칚o"""
        return os.environ.get(env_var, default)
